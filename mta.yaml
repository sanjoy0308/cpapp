_schema-version: "3.1"
ID: cpapp
description: A simple CAP project.
version: 1.0.0
modules:
- name: cpapp-destinations
  type: com.sap.application.content
  requires:
  - name: cpapp-auth
    parameters:
      service-key:
        name: cpapp-auth-key
  - name: cpapp-repo-host
    parameters:
      service-key:
        name: cpapp-repo-host-key
  - name: srv-api
  - name: cpapp-destination
    parameters:
      content-target: true
  parameters:
    content:
      instance:
        destinations:
        - Authentication: OAuth2UserTokenExchange
          Name: cpapp-app-srv
          TokenServiceInstanceName: cpapp-auth
          TokenServiceKeyName: cpapp-auth-key
          URL: ~{srv-api/srv-url}
          sap.cloud.service: cpapp.service
        - Name: cpapp-repo-host
          ServiceInstanceName: cpapp-repo-host
          ServiceKeyName: cpapp-repo-host-key
          sap.cloud.service: cpapp.service
        - Authentication: OAuth2UserTokenExchange
          Name: cpapp-auth
          ServiceInstanceName: cpapp-auth
          ServiceKeyName: cpapp-auth-key
          sap.cloud.service: cpapp.service
        existing_destinations_policy: update
  build-parameters:
    no-source: true
- name: cpapp-srv
  type: nodejs
  path: gen/srv
  requires:
  - name: cpapp-db
  - name: cpapp-logs
  - name: cpapp-auth
  provides:
  - name: srv-api
    properties:
      srv-url: ${default-url}
  parameters:
    buildpack: nodejs_buildpack
  build-parameters:
    builder: npm-ci
- name: cpapp-db-deployer
  type: hdb
  path: gen/db
  requires:
  - name: cpapp-db
  - name: cpapp-logs
  parameters:
    buildpack: nodejs_buildpack
- name: cpapp-app-content
  type: com.sap.application.content
  path: .
  requires:
  - name: cpapp-repo-host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - nsmitigations.zip
      name: nsmitigations
      target-path: resources/
    - artifacts:
      - nsrisks.zip
      name: nsrisks
      target-path: resources/
- name: nsmitigations
  type: html5
  path: app/mitigations
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: nsrisks
  type: html5
  path: app/risks
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
resources:
- name: cpapp-logs
  type: org.cloudfoundry.managed-service
  parameters:
    service: application-logs
    service-plan: lite
- name: cpapp-db
  type: com.sap.xs.hdi-container
  parameters:
    service: hana
    service-plan: hdi-shared
- name: cpapp-auth
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      role-collections:
      - description: Manage Risks
        name: RiskManager-${space}
        role-template-references:
        - $XSAPPNAME.RiskManager
      - description: View Risks
        name: RiskViewer-${space}
        role-template-references:
        - $XSAPPNAME.RiskViewer
      tenant-mode: dedicated
      xsappname: cpapp-${org}-${space}
    path: ./xs-security.json
    service: xsuaa
    service-plan: application
- name: cpapp-repo-host
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-host
- name: cpapp-destination
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      HTML5Runtime_enabled: true      
    service: destination    
    service-plan: lite
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npm run cleanup
    - npm cache verify
    - npm install --production
    - npx -p @sap/cds cds build --production
